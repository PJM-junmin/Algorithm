#include <iostream>
#include <algorithm>

using namespace std;

// Vector 구현(시간 복잡도 amortized O(1))
template <typename T>
class vector
{
private:
	T* vec; // dynamic array의 start address's pointer
	int v_size; // 크기
	int v_capacity; // 용량

public:
	// operator overloading

	// size 반환

	// capacity 반환

	// vector의 맨 앞 원소, front

	// vector의 맨 마지막 윈소, back

	// begin

	// end

	// rbegin

	// rend

	// insert

	// erase

	// push_back(복사 생성자), enplace_back(성능적으로 좋음)

	// pop_back

	// resize

	// reserve

	// empty

	// swap
	
};

// iterator 는 class이다
// vector의 iterator와 list의 iterator 차이

class CCTV
{

};

int main()
{
	// connect cin, cout, just (use cin or cout) or (use scanf or printf)
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);

}